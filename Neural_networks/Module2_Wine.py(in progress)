%matplotlib inline
import matplotlib.pyplot as plt
import torch
import numpy as np
import sklearn.datasets
wine = sklearn.datasets.load_wine()

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(
    wine.data[:, :2],
    wine.target,
    test_size=0.3,
    shuffle=True)

x_train = torch.FloatTensor(x_train)
x_test = torch.FloatTensor(x_test)
y_train = torch.LongTensor(y_train)
y_test = torch.LongTensor(y_test)

class WineNet(torch.nn.Module):
  def __init__(self, n_hidden_neurons):
    super(WineNet, self).__init__()

    self.fc1 = torch.nn.Linear(2, n_hidden_neurons)
    self.act1 = torch.nn.Sigmoid()
    self.fc2 = torch.nn.Linear(n_hidden_neurons, n_hidden_neurons)
    self.act2 = torch.nn.Sigmoid()
    self.fc3 = torch.nn.Linear(n_hidden_neurons, 3)
    self.sm = torch.nn.Softmax(dim=1)

  def forward(self, x):
    x = self.fc1(x)
    x = self.act1(x)
    x = self.fc1(x)
    x = self.act1(x)
    x = self.fc3(x)
    return x 
  
  def inference(self, x):
    x = self.forward(x)
    x = self.sm(x)
    return x
  
wine_net = WineNet(5)
